// Stock----Since Kopernicus solar panels output energy in the same way as this mod, drop the Kopernicus calculations when in the presence of volumetric clouds
@PART:HAS[!MODULE[ModuleCurvedSolarPanel]]:NEEDS[Kopernicus,!RealismOverhaul]:FOR[zWeatherDrivenSolarPanel]
{
    !MODULE[SolarPanelFixer],* {}
    @MODULE[*SolarPanel*],*
    {
        @name = weatherDrivenSolarPanelStock
    }
    
}

// RO---- Kopernicus solar panels output energy in the same way as this mod, drop the Kopernicus calculations when in the presence of volumetric clouds
@PART:HAS[!MODULE[ModuleCurvedSolarPanel]]:NEEDS[Kopernicus,RealismOverhaul]:FOR[zWeatherDrivenSolarPanel]
{
    !MODULE[SolarPanelFixer],* {}
    @MODULE[*SolarPanel*],*
    {
        @name = weatherDrivenSolarPanelRO
    }
}

// Stock----B9PartSwitch support, changes the identifier to a generic identifier
@PART:HAS[@MODULE[ModuleB9PartSwitch],!MODULE[ModuleCurvedSolarPanel],~useKopernicusSolarPanels[false]]:NEEDS[!RealismOverhaul]:FOR[zWeatherDrivenSolarPanel]
{
    @MODULE[ModuleB9PartSwitch],*
    {
        @SUBTYPE,*
        {
            @MODULE:HAS[@IDENTIFIER[*SolarPanel*]],*
            {
                @IDENTIFIER[*SolarPanel*]
                {
                    @name = weatherDrivenSolarPanelStock
                }
            }
        }
    }
}

// RO----B9PartSwitch support, changes the identifier to a generic identifier
@PART:HAS[@MODULE[ModuleB9PartSwitch],!MODULE[ModuleCurvedSolarPanel],~useKopernicusSolarPanels[false]]:NEEDS[RealismOverhaul]:FOR[zWeatherDrivenSolarPanel]
{
    @MODULE[ModuleB9PartSwitch],*
    {
        @SUBTYPE,*
        {
            @MODULE:HAS[@IDENTIFIER[*SolarPanel*]],*
            {
                @IDENTIFIER[*SolarPanel*]
                {
                    @name = weatherDrivenSolarPanelRO
                }
            }
        }
    }
}